{"ast":null,"code":"var _jsxFileName = \"D:\\\\Rofiq\\\\Kerjaan\\\\bigio\\\\repo\\\\bigio\\\\sorter-dnd\\\\src\\\\list.js\";\nimport React, { Component } from 'react';\nimport Tree from './Tree';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class List extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      tree: [{\n        id: 1,\n        title: 'Tatooine',\n        children: [{\n          id: 2,\n          title: 'Endor',\n          children: []\n        }, {\n          id: 3,\n          title: 'Hoth',\n          children: []\n        }, {\n          id: 4,\n          title: 'Dagobah',\n          children: []\n        }]\n      }, {\n        id: 5,\n        title: 'Death Star',\n        children: []\n      }, {\n        id: 6,\n        title: 'Alderaan',\n        children: [{\n          id: 7,\n          title: 'Bespin',\n          children: [{\n            id: 8,\n            title: 'Jakku',\n            children: []\n          }]\n        }]\n      }]\n    };\n  }\n\n  moveItem(id, afterId, nodeId) {\n    if (id == afterId) return;\n    let {\n      tree\n    } = this.state;\n\n    const removeNode = (id, items) => {\n      for (const node of items) {\n        if (node.id == id) {\n          items.splice(items.indexOf(node), 1);\n          return;\n        }\n\n        if (node.children && node.children.length) {\n          removeNode(id, node.children);\n        }\n      }\n    };\n\n    const item = { ...this.findItem(id, tree)\n    };\n\n    if (!item.id) {\n      return;\n    }\n\n    const dest = nodeId ? this.findItem(nodeId, tree).children : tree;\n\n    if (!afterId) {\n      removeNode(id, tree);\n      dest.push(item);\n    } else {\n      const index = dest.indexOf(dest.filter(v => v.id == afterId).shift());\n      removeNode(id, tree);\n      dest.splice(index, 0, item);\n    }\n\n    this.setState({\n      tree\n    });\n  }\n\n  findItem(id, items) {\n    for (const node of items) {\n      if (node.id == id) return node;\n\n      if (node.children && node.children.length) {\n        const result = this.findItem(id, node.children);\n\n        if (result) {\n          return result;\n        }\n      }\n    }\n\n    return false;\n  }\n\n  render() {\n    const {\n      tree\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Tree, {\n        parent: null,\n        items: tree,\n        move: this.moveItem.bind(this),\n        find: this.findItem.bind(this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 12\n    }, this);\n  }\n\n}","map":{"version":3,"names":["React","Component","Tree","List","state","tree","id","title","children","moveItem","afterId","nodeId","removeNode","items","node","splice","indexOf","length","item","findItem","dest","push","index","filter","v","shift","setState","result","render","bind"],"sources":["D:/Rofiq/Kerjaan/bigio/repo/bigio/sorter-dnd/src/list.js"],"sourcesContent":["import React, { Component } from 'react'\r\nimport Tree from './Tree'\r\n\r\nexport default class List extends Component {\r\n  state = {\r\n    tree: [\r\n      {\r\n        id: 1, title: 'Tatooine',\r\n        children: [\r\n          {id: 2, title: 'Endor', children: []},\r\n          {id: 3, title: 'Hoth', children: []},\r\n          {id: 4, title: 'Dagobah', children: []},\r\n        ]\r\n      },\r\n      {\r\n        id: 5, title: 'Death Star',\r\n        children: []\r\n      },\r\n      {\r\n        id: 6, title: 'Alderaan',\r\n        children: [\r\n          {\r\n            id: 7, title: 'Bespin',\r\n            children: [\r\n              {id: 8, title: 'Jakku', children: []}\r\n            ]\r\n          }\r\n        ]\r\n      }\r\n    ]\r\n  };\r\n\r\n  moveItem(id, afterId, nodeId) {\r\n    if (id == afterId) return\r\n\r\n    let {tree} = this.state\r\n\r\n    const removeNode = (id, items) => {\r\n      for (const node of items) {\r\n        if (node.id == id) {\r\n          items.splice(items.indexOf(node), 1)\r\n          return\r\n        }\r\n\r\n        if (node.children && node.children.length) {\r\n          removeNode(id, node.children)\r\n        }\r\n      }\r\n    }\r\n\r\n    const item = {...this.findItem(id, tree)}\r\n    if (!item.id) {\r\n      return\r\n    }\r\n\r\n    const dest = nodeId ? this.findItem(nodeId, tree).children : tree\r\n\r\n    if (!afterId) {\r\n      removeNode(id, tree)\r\n      dest.push(item)\r\n    } else {\r\n      const index = dest.indexOf(dest.filter(v => v.id == afterId).shift())\r\n      removeNode(id, tree)\r\n      dest.splice(index, 0, item)\r\n    }\r\n\r\n    this.setState({tree})\r\n  }\r\n\r\n  findItem(id, items) {\r\n    for (const node of items) {\r\n      if (node.id == id) return node\r\n      if (node.children && node.children.length) {\r\n        const result = this.findItem(id, node.children)\r\n        if (result) {\r\n          return result\r\n        }\r\n      }\r\n    }\r\n\r\n    return false\r\n  }\r\n\r\n  render() {\r\n    const {tree} = this.state\r\n\r\n    return <div>\r\n      <Tree\r\n        parent={null}\r\n        items={tree}\r\n        move={this.moveItem.bind(this)}\r\n        find={this.findItem.bind(this)}\r\n      />\r\n    </div>\r\n  }\r\n}"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,QAAjB;;AAEA,eAAe,MAAMC,IAAN,SAAmBF,SAAnB,CAA6B;EAAA;IAAA;IAAA,KAC1CG,KAD0C,GAClC;MACNC,IAAI,EAAE,CACJ;QACEC,EAAE,EAAE,CADN;QACSC,KAAK,EAAE,UADhB;QAEEC,QAAQ,EAAE,CACR;UAACF,EAAE,EAAE,CAAL;UAAQC,KAAK,EAAE,OAAf;UAAwBC,QAAQ,EAAE;QAAlC,CADQ,EAER;UAACF,EAAE,EAAE,CAAL;UAAQC,KAAK,EAAE,MAAf;UAAuBC,QAAQ,EAAE;QAAjC,CAFQ,EAGR;UAACF,EAAE,EAAE,CAAL;UAAQC,KAAK,EAAE,SAAf;UAA0BC,QAAQ,EAAE;QAApC,CAHQ;MAFZ,CADI,EASJ;QACEF,EAAE,EAAE,CADN;QACSC,KAAK,EAAE,YADhB;QAEEC,QAAQ,EAAE;MAFZ,CATI,EAaJ;QACEF,EAAE,EAAE,CADN;QACSC,KAAK,EAAE,UADhB;QAEEC,QAAQ,EAAE,CACR;UACEF,EAAE,EAAE,CADN;UACSC,KAAK,EAAE,QADhB;UAEEC,QAAQ,EAAE,CACR;YAACF,EAAE,EAAE,CAAL;YAAQC,KAAK,EAAE,OAAf;YAAwBC,QAAQ,EAAE;UAAlC,CADQ;QAFZ,CADQ;MAFZ,CAbI;IADA,CADkC;EAAA;;EA6B1CC,QAAQ,CAACH,EAAD,EAAKI,OAAL,EAAcC,MAAd,EAAsB;IAC5B,IAAIL,EAAE,IAAII,OAAV,EAAmB;IAEnB,IAAI;MAACL;IAAD,IAAS,KAAKD,KAAlB;;IAEA,MAAMQ,UAAU,GAAG,CAACN,EAAD,EAAKO,KAAL,KAAe;MAChC,KAAK,MAAMC,IAAX,IAAmBD,KAAnB,EAA0B;QACxB,IAAIC,IAAI,CAACR,EAAL,IAAWA,EAAf,EAAmB;UACjBO,KAAK,CAACE,MAAN,CAAaF,KAAK,CAACG,OAAN,CAAcF,IAAd,CAAb,EAAkC,CAAlC;UACA;QACD;;QAED,IAAIA,IAAI,CAACN,QAAL,IAAiBM,IAAI,CAACN,QAAL,CAAcS,MAAnC,EAA2C;UACzCL,UAAU,CAACN,EAAD,EAAKQ,IAAI,CAACN,QAAV,CAAV;QACD;MACF;IACF,CAXD;;IAaA,MAAMU,IAAI,GAAG,EAAC,GAAG,KAAKC,QAAL,CAAcb,EAAd,EAAkBD,IAAlB;IAAJ,CAAb;;IACA,IAAI,CAACa,IAAI,CAACZ,EAAV,EAAc;MACZ;IACD;;IAED,MAAMc,IAAI,GAAGT,MAAM,GAAG,KAAKQ,QAAL,CAAcR,MAAd,EAAsBN,IAAtB,EAA4BG,QAA/B,GAA0CH,IAA7D;;IAEA,IAAI,CAACK,OAAL,EAAc;MACZE,UAAU,CAACN,EAAD,EAAKD,IAAL,CAAV;MACAe,IAAI,CAACC,IAAL,CAAUH,IAAV;IACD,CAHD,MAGO;MACL,MAAMI,KAAK,GAAGF,IAAI,CAACJ,OAAL,CAAaI,IAAI,CAACG,MAAL,CAAYC,CAAC,IAAIA,CAAC,CAAClB,EAAF,IAAQI,OAAzB,EAAkCe,KAAlC,EAAb,CAAd;MACAb,UAAU,CAACN,EAAD,EAAKD,IAAL,CAAV;MACAe,IAAI,CAACL,MAAL,CAAYO,KAAZ,EAAmB,CAAnB,EAAsBJ,IAAtB;IACD;;IAED,KAAKQ,QAAL,CAAc;MAACrB;IAAD,CAAd;EACD;;EAEDc,QAAQ,CAACb,EAAD,EAAKO,KAAL,EAAY;IAClB,KAAK,MAAMC,IAAX,IAAmBD,KAAnB,EAA0B;MACxB,IAAIC,IAAI,CAACR,EAAL,IAAWA,EAAf,EAAmB,OAAOQ,IAAP;;MACnB,IAAIA,IAAI,CAACN,QAAL,IAAiBM,IAAI,CAACN,QAAL,CAAcS,MAAnC,EAA2C;QACzC,MAAMU,MAAM,GAAG,KAAKR,QAAL,CAAcb,EAAd,EAAkBQ,IAAI,CAACN,QAAvB,CAAf;;QACA,IAAImB,MAAJ,EAAY;UACV,OAAOA,MAAP;QACD;MACF;IACF;;IAED,OAAO,KAAP;EACD;;EAEDC,MAAM,GAAG;IACP,MAAM;MAACvB;IAAD,IAAS,KAAKD,KAApB;IAEA,oBAAO;MAAA,uBACL,QAAC,IAAD;QACE,MAAM,EAAE,IADV;QAEE,KAAK,EAAEC,IAFT;QAGE,IAAI,EAAE,KAAKI,QAAL,CAAcoB,IAAd,CAAmB,IAAnB,CAHR;QAIE,IAAI,EAAE,KAAKV,QAAL,CAAcU,IAAd,CAAmB,IAAnB;MAJR;QAAA;QAAA;QAAA;MAAA;IADK;MAAA;MAAA;MAAA;IAAA,QAAP;EAQD;;AA3FyC"},"metadata":{},"sourceType":"module"}
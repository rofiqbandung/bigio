{"ast":null,"code":"var _jsxFileName = \"D:\\\\Rofiq\\\\Kerjaan\\\\bigio\\\\repo\\\\bigio\\\\sorter-dnd\\\\src\\\\Card.js\",\n    _s = $RefreshSig$();\n\nimport { useRef } from 'react';\nimport { useDrag, useDrop } from 'react-dnd';\nimport { ItemTypes } from './ItemTypes.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst style = {\n  padding: '0.5rem 1rem',\n  marginBottom: '.5rem',\n  backgroundColor: 'white',\n  cursor: 'move',\n  borderRadius: '25px',\n  border: '2px solid grey',\n  padding: '20px',\n  width: '80%'\n};\nconst divDalam = {\n  padding: '0.5rem 1rem',\n  marginRight: '10px',\n  width: '28%',\n  float: 'left'\n};\nexport const Card = _ref => {\n  _s();\n\n  let {\n    id,\n    text,\n    textDalam1,\n    textDalam2,\n    textDalam3,\n    index,\n    moveCard\n  } = _ref;\n  const ref = useRef(null);\n  const [{\n    handlerId\n  }, drop] = useDrop({\n    accept: ItemTypes.CARD,\n\n    collect(monitor) {\n      return {\n        handlerId: monitor.getHandlerId()\n      };\n    },\n\n    hover(item, monitor) {\n      var _ref$current;\n\n      if (!ref.current) {\n        return;\n      }\n\n      const dragIndex = item.index;\n      const hoverIndex = index; // Don't replace items with themselves\n\n      if (dragIndex === hoverIndex) {\n        return;\n      } // Determine rectangle on screen\n\n\n      const hoverBoundingRect = (_ref$current = ref.current) === null || _ref$current === void 0 ? void 0 : _ref$current.getBoundingClientRect(); // Get vertical middle\n\n      const hoverMiddleY = (hoverBoundingRect.bottom - hoverBoundingRect.top) / 2; // Determine mouse position\n\n      const clientOffset = monitor.getClientOffset(); // Get pixels to the top\n\n      const hoverClientY = clientOffset.y - hoverBoundingRect.top; // Only perform the move when the mouse has crossed half of the items height\n      // When dragging downwards, only move when the cursor is below 50%\n      // When dragging upwards, only move when the cursor is above 50%\n      // Dragging downwards\n\n      if (dragIndex < hoverIndex && hoverClientY < hoverMiddleY) {\n        return;\n      } // Dragging upwards\n\n\n      if (dragIndex > hoverIndex && hoverClientY > hoverMiddleY) {\n        return;\n      } // Time to actually perform the action\n\n\n      moveCard(dragIndex, hoverIndex); // Note: we're mutating the monitor item here!\n      // Generally it's better to avoid mutations,\n      // but it's good here for the sake of performance\n      // to avoid expensive index searches.\n\n      item.index = hoverIndex;\n    }\n\n  });\n  const [{\n    isDragging\n  }, drag] = useDrag({\n    type: ItemTypes.CARD,\n    item: () => {\n      return {\n        id,\n        index\n      };\n    },\n    collect: monitor => ({\n      isDragging: monitor.isDragging()\n    })\n  });\n  const opacity = isDragging ? 0 : 1;\n  drag(drop(ref));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: ref,\n    style: { ...style,\n      opacity\n    },\n    \"data-handler-id\": handlerId,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: { ...divDalam,\n        opacity\n      },\n      children: textDalam1\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: { ...divDalam,\n        opacity\n      },\n      children: textDalam2\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: { ...divDalam,\n        opacity\n      },\n      children: textDalam3\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Card, \"Bm9lse0dSUrMRW3+tCDIsw+uDQ8=\", false, function () {\n  return [useDrop, useDrag];\n});\n\n_c = Card;\n\nvar _c;\n\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"names":["useRef","useDrag","useDrop","ItemTypes","style","padding","marginBottom","backgroundColor","cursor","borderRadius","border","width","divDalam","marginRight","float","Card","id","text","textDalam1","textDalam2","textDalam3","index","moveCard","ref","handlerId","drop","accept","CARD","collect","monitor","getHandlerId","hover","item","current","dragIndex","hoverIndex","hoverBoundingRect","getBoundingClientRect","hoverMiddleY","bottom","top","clientOffset","getClientOffset","hoverClientY","y","isDragging","drag","type","opacity"],"sources":["D:/Rofiq/Kerjaan/bigio/repo/bigio/sorter-dnd/src/Card.js"],"sourcesContent":["import { useRef } from 'react'\r\nimport { useDrag, useDrop } from 'react-dnd'\r\nimport { ItemTypes } from './ItemTypes.js'\r\nconst style = {\r\n\tpadding: '0.5rem 1rem',\r\n\tmarginBottom: '.5rem',\r\n\tbackgroundColor: 'white',\r\n\tcursor: 'move',\r\n\tborderRadius: '25px',\r\n\tborder: '2px solid grey',\r\n\tpadding: '20px',\r\n\twidth: '80%',\r\n\t\r\n}\r\n\r\nconst divDalam = {\r\n\tpadding: '0.5rem 1rem',\r\n\tmarginRight:'10px',\r\n\twidth:'28%',\r\n\tfloat:'left',\r\n}\r\n\r\n\r\nexport const Card = ({ id, text, textDalam1, textDalam2, textDalam3, index, moveCard }) => {\r\n  const ref = useRef(null)\r\n  const [{ handlerId }, drop] = useDrop({\r\n    accept: ItemTypes.CARD,\r\n    collect(monitor) {\r\n      return {\r\n        handlerId: monitor.getHandlerId(),\r\n      }\r\n    },\r\n    hover(item, monitor) {\r\n      if (!ref.current) {\r\n        return\r\n      }\r\n      const dragIndex = item.index\r\n      const hoverIndex = index\r\n      // Don't replace items with themselves\r\n      if (dragIndex === hoverIndex) {\r\n        return\r\n      }\r\n      // Determine rectangle on screen\r\n      const hoverBoundingRect = ref.current?.getBoundingClientRect()\r\n      // Get vertical middle\r\n      const hoverMiddleY =\r\n        (hoverBoundingRect.bottom - hoverBoundingRect.top) / 2\r\n      // Determine mouse position\r\n      const clientOffset = monitor.getClientOffset()\r\n      // Get pixels to the top\r\n      const hoverClientY = clientOffset.y - hoverBoundingRect.top\r\n      // Only perform the move when the mouse has crossed half of the items height\r\n      // When dragging downwards, only move when the cursor is below 50%\r\n      // When dragging upwards, only move when the cursor is above 50%\r\n      // Dragging downwards\r\n      if (dragIndex < hoverIndex && hoverClientY < hoverMiddleY) {\r\n        return\r\n      }\r\n      // Dragging upwards\r\n      if (dragIndex > hoverIndex && hoverClientY > hoverMiddleY) {\r\n        return\r\n      }\r\n      // Time to actually perform the action\r\n      moveCard(dragIndex, hoverIndex)\r\n      // Note: we're mutating the monitor item here!\r\n      // Generally it's better to avoid mutations,\r\n      // but it's good here for the sake of performance\r\n      // to avoid expensive index searches.\r\n      item.index = hoverIndex\r\n    },\r\n  })\r\n  const [{ isDragging }, drag] = useDrag({\r\n    type: ItemTypes.CARD,\r\n    item: () => {\r\n      return { id, index }\r\n    },\r\n    collect: (monitor) => ({\r\n      isDragging: monitor.isDragging(),\r\n    }),\r\n  })\r\n  const opacity = isDragging ? 0 : 1\r\n  drag(drop(ref))\r\n  return (\r\n    <div ref={ref} style={{ ...style, opacity }} data-handler-id={handlerId}>\r\n\t\t\t<div style={{ ...divDalam, opacity }} >{textDalam1}</div>\r\n\t\t\t<div style={{ ...divDalam, opacity }} >{textDalam2}</div>\r\n\t\t\t<div style={{ ...divDalam, opacity }} >{textDalam3}</div>\r\n\r\n      <br />\r\n    </div>\r\n  )\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}
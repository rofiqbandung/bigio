{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst react_1 = __importDefault(require(\"react\"));\n\nconst immutability_helper_1 = __importDefault(require(\"immutability-helper\"));\n\nconst utils_1 = require(\"./utils\");\n\nconst useAnimationFrame_1 = __importDefault(require(\"./useAnimationFrame\"));\n\nconst context_1 = __importDefault(require(\"./context\"));\n\nconst sortlyContext_1 = __importDefault(require(\"./sortlyContext\"));\n\nconst itemContext_1 = __importDefault(require(\"./itemContext\"));\n\nconst Item_1 = __importDefault(require(\"./Item\"));\n/**\n * @hidden\n */\n\n\nconst isRef = obj => // eslint-disable-next-line no-prototype-builtins\nobj !== null && typeof obj === 'object' && obj.hasOwnProperty('current');\n/**\n * @hidden\n */\n\n\nconst getElConnectableElement = connectedDropTarget => {\n  if (!connectedDropTarget) {\n    return null;\n  }\n\n  const connectable = connectedDropTarget.current || connectedDropTarget;\n\n  if (!connectable) {\n    return null;\n  }\n\n  const el = isRef(connectable) ? connectable.current : connectable;\n  return el;\n};\n/**\n * @hidden\n */\n\n\nconst detectMove = (items, dragMonitor, dragId, targetId, dropEl, horizontal) => {\n  const pointerOffset = dragMonitor.getClientOffset();\n\n  if (!pointerOffset) {\n    return items;\n  }\n\n  const targetBoundingRect = dropEl.getBoundingClientRect();\n  const sourceIndex = items.findIndex(_ref => {\n    let {\n      id\n    } = _ref;\n    return id === dragId;\n  });\n  const targetIndex = items.findIndex(_ref2 => {\n    let {\n      id\n    } = _ref2;\n    return id === targetId;\n  });\n\n  if (sourceIndex === -1 || targetIndex === -1) {\n    return items;\n  }\n\n  if (!horizontal) {\n    const hoverMiddleY = (targetBoundingRect.bottom - targetBoundingRect.top) / 2;\n    const hoverClientY = pointerOffset.y - targetBoundingRect.top;\n\n    if (hoverClientY < hoverMiddleY && utils_1.isNextSibling(items, sourceIndex, targetIndex) // Dragging downwards\n    || hoverClientY > hoverMiddleY && utils_1.isPrevSibling(items, sourceIndex, targetIndex) // Dragging upwards\n    ) {\n      return items;\n    }\n  } else {\n    const hoverMiddleX = (targetBoundingRect.right - targetBoundingRect.left) / 2;\n    const hoverClientX = pointerOffset.x - targetBoundingRect.left;\n\n    if (hoverClientX < hoverMiddleX && utils_1.isNextSibling(items, sourceIndex, targetIndex) // Dragging forwards\n    || hoverClientX > hoverMiddleX && utils_1.isPrevSibling(items, sourceIndex, targetIndex) // Dragging backwards\n    ) {\n      return items;\n    }\n  }\n\n  return utils_1.move(items, sourceIndex, targetIndex);\n};\n/**\n * @hidden\n */\n\n\nconst detectIndent = (items, dragMonitor, dragId, dragEl, threshold, initialDepth, maxDepth) => {\n  if (maxDepth === 0) {\n    return items;\n  }\n\n  const sourceClientOffset = dragMonitor.getSourceClientOffset();\n\n  if (!sourceClientOffset) {\n    return items;\n  }\n\n  const boundingRect = dragEl.getBoundingClientRect();\n  const movementX = sourceClientOffset.x - boundingRect.left;\n\n  if (Math.abs(movementX) < threshold) {\n    return items;\n  }\n\n  const index = items.findIndex(_ref3 => {\n    let {\n      id\n    } = _ref3;\n    return id === dragId;\n  });\n\n  if (index === -1) {\n    return items;\n  }\n\n  const item = items[index];\n  const depth = item.depth + (movementX > 0 ? 1 : -1);\n  return utils_1.updateDepth(items, index, depth, maxDepth);\n};\n/**\n * @hidden\n */\n\n\nconst typeSeq = (() => {\n  let seq = 0;\n  return () => {\n    seq += 1;\n    return `SORTLY-${seq}`;\n  };\n})();\n\nfunction Sortly(props) {\n  const {\n    type: typeFromProps,\n    items,\n    children,\n    threshold = 20,\n    maxDepth = Infinity,\n    horizontal,\n    onChange\n  } = props;\n  const [type, setType] = react_1.default.useState(typeFromProps || typeSeq());\n  react_1.default.useEffect(() => {\n    if (typeFromProps) {\n      setType(typeFromProps);\n    }\n  }, [typeFromProps]);\n  const {\n    dragMonitor,\n    connectedDragSource,\n    initialDepth\n  } = react_1.default.useContext(context_1.default);\n  const dndData = react_1.default.useRef({});\n  const [startAnim, stopAnim] = useAnimationFrame_1.default(react_1.default.useCallback(() => {\n    const {\n      dropTargetId,\n      connectedDropTarget\n    } = dndData.current;\n\n    if (!dragMonitor) {\n      return;\n    }\n\n    const dragItem = dragMonitor.getItem();\n\n    if (!dragItem) {\n      return;\n    }\n\n    const {\n      id: dragId\n    } = dragItem;\n    let newItems;\n\n    if (!dropTargetId || dragId === dropTargetId) {\n      const el = getElConnectableElement(connectedDragSource);\n\n      if (initialDepth !== undefined && el) {\n        newItems = detectIndent(items, dragMonitor, dragId, el, threshold, initialDepth, maxDepth);\n      }\n    } else if (connectedDropTarget) {\n      const dropElement = getElConnectableElement(connectedDropTarget);\n\n      if (dropElement) {\n        newItems = detectMove(items, dragMonitor, dragId, dropTargetId, dropElement, horizontal);\n      }\n    }\n\n    if (newItems && newItems !== items) {\n      onChange(newItems);\n    }\n  }, [connectedDragSource, dragMonitor, horizontal, initialDepth, items, maxDepth, onChange, threshold]));\n  const handleHoverBegin = react_1.default.useCallback((id, connectedDropTarget) => {\n    dndData.current = immutability_helper_1.default(dndData.current, {\n      dropTargetId: {\n        $set: id\n      },\n      connectedDropTarget: {\n        $set: connectedDropTarget\n      }\n    });\n  }, []);\n  const handleHoverEnd = react_1.default.useCallback(id => {\n    if (dndData.current.dropTargetId === id) {\n      dndData.current = immutability_helper_1.default(dndData.current, {\n        dropTargetId: {\n          $set: undefined\n        },\n        connectedDropTarget: {\n          $set: undefined\n        }\n      });\n    }\n  }, []);\n  react_1.default.useEffect(() => {\n    if (dragMonitor) {\n      startAnim();\n    } else {\n      stopAnim();\n    }\n\n    return () => {\n      stopAnim();\n    };\n  }, [dragMonitor, startAnim, stopAnim]);\n  return react_1.default.createElement(sortlyContext_1.default.Provider, {\n    value: {\n      items\n    }\n  }, items.map((data, index) => react_1.default.createElement(itemContext_1.default.Provider, {\n    key: data.id,\n    value: {\n      index,\n      id: data.id,\n      type,\n      depth: data.depth,\n      data,\n      onHoverBegin: handleHoverBegin,\n      onHoverEnd: handleHoverEnd\n    }\n  }, react_1.default.createElement(Item_1.default, {\n    index: index,\n    id: data.id,\n    depth: data.depth,\n    data: data\n  }, children))));\n}\n\nexports.default = Sortly;","map":{"version":3,"names":["__importDefault","mod","__esModule","Object","defineProperty","exports","value","react_1","require","immutability_helper_1","utils_1","useAnimationFrame_1","context_1","sortlyContext_1","itemContext_1","Item_1","isRef","obj","hasOwnProperty","getElConnectableElement","connectedDropTarget","connectable","current","el","detectMove","items","dragMonitor","dragId","targetId","dropEl","horizontal","pointerOffset","getClientOffset","targetBoundingRect","getBoundingClientRect","sourceIndex","findIndex","id","targetIndex","hoverMiddleY","bottom","top","hoverClientY","y","isNextSibling","isPrevSibling","hoverMiddleX","right","left","hoverClientX","x","move","detectIndent","dragEl","threshold","initialDepth","maxDepth","sourceClientOffset","getSourceClientOffset","boundingRect","movementX","Math","abs","index","item","depth","updateDepth","typeSeq","seq","Sortly","props","type","typeFromProps","children","Infinity","onChange","setType","default","useState","useEffect","connectedDragSource","useContext","dndData","useRef","startAnim","stopAnim","useCallback","dropTargetId","dragItem","getItem","newItems","undefined","dropElement","handleHoverBegin","$set","handleHoverEnd","createElement","Provider","map","data","key","onHoverBegin","onHoverEnd"],"sources":["D:/Rofiq/Kerjaan/bigio/repo/bigio/sorter-dnd/node_modules/react-sortly/lib/Sortly.js"],"sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst react_1 = __importDefault(require(\"react\"));\nconst immutability_helper_1 = __importDefault(require(\"immutability-helper\"));\nconst utils_1 = require(\"./utils\");\nconst useAnimationFrame_1 = __importDefault(require(\"./useAnimationFrame\"));\nconst context_1 = __importDefault(require(\"./context\"));\nconst sortlyContext_1 = __importDefault(require(\"./sortlyContext\"));\nconst itemContext_1 = __importDefault(require(\"./itemContext\"));\nconst Item_1 = __importDefault(require(\"./Item\"));\n/**\n * @hidden\n */\nconst isRef = (obj) => (\n// eslint-disable-next-line no-prototype-builtins\nobj !== null && typeof obj === 'object' && obj.hasOwnProperty('current'));\n/**\n * @hidden\n */\nconst getElConnectableElement = (connectedDropTarget) => {\n    if (!connectedDropTarget) {\n        return null;\n    }\n    const connectable = connectedDropTarget.current || connectedDropTarget;\n    if (!connectable) {\n        return null;\n    }\n    const el = isRef(connectable)\n        ? (connectable.current) : connectable;\n    return el;\n};\n/**\n * @hidden\n */\nconst detectMove = (items, dragMonitor, dragId, targetId, dropEl, horizontal) => {\n    const pointerOffset = dragMonitor.getClientOffset();\n    if (!pointerOffset) {\n        return items;\n    }\n    const targetBoundingRect = dropEl.getBoundingClientRect();\n    const sourceIndex = items.findIndex(({ id }) => id === dragId);\n    const targetIndex = items.findIndex(({ id }) => id === targetId);\n    if (sourceIndex === -1 || targetIndex === -1) {\n        return items;\n    }\n    if (!horizontal) {\n        const hoverMiddleY = (targetBoundingRect.bottom - targetBoundingRect.top) / 2;\n        const hoverClientY = pointerOffset.y - targetBoundingRect.top;\n        if ((hoverClientY < hoverMiddleY && utils_1.isNextSibling(items, sourceIndex, targetIndex)) // Dragging downwards\n            || (hoverClientY > hoverMiddleY && utils_1.isPrevSibling(items, sourceIndex, targetIndex)) // Dragging upwards\n        ) {\n            return items;\n        }\n    }\n    else {\n        const hoverMiddleX = (targetBoundingRect.right - targetBoundingRect.left) / 2;\n        const hoverClientX = pointerOffset.x - targetBoundingRect.left;\n        if ((hoverClientX < hoverMiddleX && utils_1.isNextSibling(items, sourceIndex, targetIndex)) // Dragging forwards\n            || (hoverClientX > hoverMiddleX && utils_1.isPrevSibling(items, sourceIndex, targetIndex)) // Dragging backwards\n        ) {\n            return items;\n        }\n    }\n    return utils_1.move(items, sourceIndex, targetIndex);\n};\n/**\n * @hidden\n */\nconst detectIndent = (items, dragMonitor, dragId, dragEl, threshold, initialDepth, maxDepth) => {\n    if (maxDepth === 0) {\n        return items;\n    }\n    const sourceClientOffset = dragMonitor.getSourceClientOffset();\n    if (!sourceClientOffset) {\n        return items;\n    }\n    const boundingRect = dragEl.getBoundingClientRect();\n    const movementX = sourceClientOffset.x - boundingRect.left;\n    if (Math.abs(movementX) < threshold) {\n        return items;\n    }\n    const index = items.findIndex(({ id }) => id === dragId);\n    if (index === -1) {\n        return items;\n    }\n    const item = items[index];\n    const depth = item.depth + (movementX > 0 ? 1 : -1);\n    return utils_1.updateDepth(items, index, depth, maxDepth);\n};\n/**\n * @hidden\n */\nconst typeSeq = (() => {\n    let seq = 0;\n    return () => {\n        seq += 1;\n        return `SORTLY-${seq}`;\n    };\n})();\nfunction Sortly(props) {\n    const { type: typeFromProps, items, children, threshold = 20, maxDepth = Infinity, horizontal, onChange } = props;\n    const [type, setType] = react_1.default.useState(typeFromProps || typeSeq());\n    react_1.default.useEffect(() => {\n        if (typeFromProps) {\n            setType(typeFromProps);\n        }\n    }, [typeFromProps]);\n    const { dragMonitor, connectedDragSource, initialDepth } = react_1.default.useContext(context_1.default);\n    const dndData = react_1.default.useRef({});\n    const [startAnim, stopAnim] = useAnimationFrame_1.default(react_1.default.useCallback(() => {\n        const { dropTargetId, connectedDropTarget } = dndData.current;\n        if (!dragMonitor) {\n            return;\n        }\n        const dragItem = dragMonitor.getItem();\n        if (!dragItem) {\n            return;\n        }\n        const { id: dragId } = dragItem;\n        let newItems;\n        if (!dropTargetId || dragId === dropTargetId) {\n            const el = getElConnectableElement(connectedDragSource);\n            if (initialDepth !== undefined && el) {\n                newItems = detectIndent(items, dragMonitor, dragId, el, threshold, initialDepth, maxDepth);\n            }\n        }\n        else if (connectedDropTarget) {\n            const dropElement = getElConnectableElement(connectedDropTarget);\n            if (dropElement) {\n                newItems = detectMove(items, dragMonitor, dragId, dropTargetId, dropElement, horizontal);\n            }\n        }\n        if (newItems && newItems !== items) {\n            onChange(newItems);\n        }\n    }, [connectedDragSource, dragMonitor, horizontal, initialDepth, items, maxDepth, onChange, threshold]));\n    const handleHoverBegin = react_1.default.useCallback((id, connectedDropTarget) => {\n        dndData.current = immutability_helper_1.default(dndData.current, {\n            dropTargetId: { $set: id }, connectedDropTarget: { $set: connectedDropTarget }\n        });\n    }, []);\n    const handleHoverEnd = react_1.default.useCallback((id) => {\n        if (dndData.current.dropTargetId === id) {\n            dndData.current = immutability_helper_1.default(dndData.current, {\n                dropTargetId: { $set: undefined }, connectedDropTarget: { $set: undefined }\n            });\n        }\n    }, []);\n    react_1.default.useEffect(() => {\n        if (dragMonitor) {\n            startAnim();\n        }\n        else {\n            stopAnim();\n        }\n        return () => {\n            stopAnim();\n        };\n    }, [dragMonitor, startAnim, stopAnim]);\n    return (react_1.default.createElement(sortlyContext_1.default.Provider, { value: { items } }, items.map((data, index) => (react_1.default.createElement(itemContext_1.default.Provider, { key: data.id, value: {\n            index,\n            id: data.id,\n            type,\n            depth: data.depth,\n            data,\n            onHoverBegin: handleHoverBegin,\n            onHoverEnd: handleHoverEnd,\n        } },\n        react_1.default.createElement(Item_1.default, { index: index, id: data.id, depth: data.depth, data: data }, children))))));\n}\nexports.default = Sortly;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}